name: "build-test"
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - master

concurrency:
  cancel-in-progress: true
  group: "${{ github.workflow }}-${{ github.ref }}"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: pnpm

      - run: pnpm i
      - run: pnpm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: pnpm

      - run: pnpm i
      - run: pnpm run test
      - uses: codecov/codecov-action@v4

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - run: pnpm i
      - run: pnpm run build

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist/index.js

  test-default: # make sure the action works on a clean machine without building
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - uses: Trim21/setup-poetry@dist/v2

      - uses: ./
        with:
          extras: group1

      - run: python3 tests/group1.py

  test-run: # make sure the action works on a clean machine without building
    needs: test-default
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python_version: ["3.8", "3.11"]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      - uses: Trim21/setup-poetry@dist/v2

      - uses: ./
        with:
          extras: group2
          install_args: "-vvv"

      - run: python tests/group2.py

      - run: pre-commit --version

  test-multi-group: # make sure the action works on a clean machine without building
    needs: test-default
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python_version: ["3.8", "3.10"]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      - uses: Trim21/setup-poetry@dist/v2
      - uses: ./
        with:
          extras: |
            group1
            group2
          install_args: "-vvv"

      - run: python tests/group1.py
      - run: python tests/group2.py
      - run: pre-commit --version

  test-run-lower-poetry: # make sure the action works on a clean machine without building
    needs: test-default
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - uses: actions/setup-python@v5
        with:
          python-version: "3.8"
      - uses: Trim21/setup-poetry@dist/v2

      - uses: ./
        with:
          install_args: "-vvv"
          extras: group1

      - run: python tests/group1.py
