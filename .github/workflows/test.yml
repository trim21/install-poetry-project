name: "build-test"
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: "16"

    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: actions/cache@v3
        id: restore-cache
        with:
          path: ./node_modules
          key: yarn-${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}

      - run: yarn
      - run: yarn test
      - uses: codecov/codecov-action@v3

  build:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: "16"

    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: actions/cache@v3
        id: restore-cache
        with:
          path: ./node_modules
          key: yarn-${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}

      - run: yarn
      - run: yarn build

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./dist/index.js

  test-default: # make sure the action works on a clean machine without building
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - uses: Trim21/setup-poetry@dist/v1

      - uses: ./
        with:
          extras: group1

      - run: python3 tests/group1.py

  test-run: # make sure the action works on a clean machine without building
    needs: test-default
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python_version: [ "3.7", "3.10" ]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
      - uses: Trim21/setup-poetry@dist/v1

      - uses: ./
        with:
          extras: group2
          install_args: "-vvv"

      - run: python tests/group2.py

      - run: pre-commit --version

  test-multi-group: # make sure the action works on a clean machine without building
    needs: test-default
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python_version: [ "3.7", "3.10" ]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
      - uses: Trim21/setup-poetry@dist/v1
      - uses: ./
        with:
          extras: |
            group1
            group2
          install_args: "-vvv"

      - run: python tests/group1.py
      - run: python tests/group2.py
      - run: pre-commit --version

  test-run-lower-poetry: # make sure the action works on a clean machine without building
    needs: test-default
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: Trim21/setup-poetry@dist/v1

      - uses: ./
        with:
          install_args: "-vvv"
          extras: group1

      - run: python tests/group1.py
